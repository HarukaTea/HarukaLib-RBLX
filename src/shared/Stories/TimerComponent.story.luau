
local RepS = game:GetService("ReplicatedStorage")

local Components = require(RepS.HarukaShared.UIAtlas.HarukaComponents)
local Fusion = require(RepS.HarukaShared.Shared.Fusion)
local HarukaLib = require(RepS.HarukaShared.Shared.HarukaLib)

local UILab = require(RepS.HarukaShared.Shared.UILabs)

local Children = Fusion.Children

local fromScale = UDim2.fromScale
local v2New = Vector2.new

return UILab.CreateFusionStory({
    fusion = Fusion,
    controls = {
        Countdown = UILab.Slider(15, 0, 159, 3),
    },

}, function(props)
    local scope = props.scope

    local component = Components.Frame(scope, {
        Name = "TimerFrame",
        Parent = props.target,

        Size = UDim2.fromScale(1, 0.1),

        [Children] = {
            Components.UIListLayout(scope, {
                FillDirection = Enum.FillDirection.Horizontal,
                HorizontalAlignment = Enum.HorizontalAlignment.Center,
                VerticalAlignment = Enum.VerticalAlignment.Center
            }),

            Components.ImageLabel(scope, {
                Name = "TimerBG",
                Size = fromScale(0.15, 0.7),
                Image = "rbxassetid://97834064886932",
                ImageColor3 = Color3.fromRGB(),

                Visible = Fusion.Computed(scope, function(use: Fusion.Use)
                    return if use(props.controls.Countdown) > 0 then true else false
                end),

                [Children] = {
                    Components.UIListLayout(scope, {
                        FillDirection = Enum.FillDirection.Horizontal,
                        HorizontalAlignment = Enum.HorizontalAlignment.Center,
                        VerticalAlignment = Enum.VerticalAlignment.Center
                    }),

                    Fusion.New(scope, "UIGradient")({
                        Transparency = NumberSequence.new({
                            NumberSequenceKeypoint.new(0, 1),
                            NumberSequenceKeypoint.new(0.15, 0.25),
                            NumberSequenceKeypoint.new(0.5, 0),
                            NumberSequenceKeypoint.new(0.85, 0.25),
                            NumberSequenceKeypoint.new(1, 1)
                        })
                    }),

                    Components.ImageLabel(scope, {
                        Name = "Icon",
                        Size = fromScale(0.7, 0.7),
                        SizeConstraint = Enum.SizeConstraint.RelativeYY,
                        Image = "rbxassetid://108568405853683",
                        LayoutOrder = 1,
                    }),
                    Components.TextLabel(scope, {
                        Name = "Time",
                        AutomaticSize = Enum.AutomaticSize.X,
                        Size = fromScale(0, 1),
                        LayoutOrder = 2,
                        FontFace = Font.fromName("Roboto", Enum.FontWeight.Bold),

                        Text = Fusion.Computed(scope, function(use: Fusion.Use)
                            return HarukaLib:TimeifyNumber(use(props.controls.Countdown))
                        end),

                        [Children] = {
                            Components.UIPadding(scope, {})
                        }
                    })
                }
            }),
        }
    })
end)
